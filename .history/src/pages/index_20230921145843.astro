---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header';
import Footer from '../components/Footer';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';
import '../styles/global.css'

const posts = (await getCollection('blog')).sort(
	(a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
);

export const cx = (...classNames:any) =>
  classNames.filter(Boolean).join(" ");

// because we use sanity-next-image
// vercel throws error when using normal imports

---

<!DOCTYPE html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			ul {
				list-style-type: none;
				padding: unset;
			}
			ul li {
				display: flex;
			}
			ul li :global(time) {
				flex: 0 0 130px;
				font-style: italic;
				color: #595959;
			}
			ul li a:visited {
				color: #8e32dc;
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<!-- component -->
			<!-- ====== Blog Section Start -->
			<!-- <section class="pt-20 pb-10 lg:pt-[120px] lg:pb-20">
				<div class="container mx-auto">
					<div class="-mx-1 flex flex-wrap">
						{posts.map((post) => (
							<div class="w-full sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/4 px-1">
								<div class="mx-auto mb-10 max-w-[370px] border border-gray-300 rounded-lg">
									<div class="overflow-hidden">
										<img
											src={post.data.heroImage}
											alt="image"
											class="w-full h-auto sm:h-48 lg:h-auto"
										/>
									</div>
									<div class="p-4">
										<span class="bg-primary mb-2 inline-block rounded-full py-1 px-4 text-center text-xs font-semibold leading-loose text-white">
											<FormattedDate date={post.data.pubDate} />
										</span>
										<h3>
											<a
												href={`/${post.slug}/`}
												class="text-dark hover:text-primary mb-2 inline-block text-xl font-semibold sm:text-2xl lg:text-xl xl:text-2xl"
											>
												{post.data.title}
											</a>
										</h3>
										<p class="text-body-color text-base">
											Lorem Ipsum is simply dummy text of the printing and typesetting industry.
										</p>
									</div>
								</div>
							</div>
						))}
					</div>
				</div>
			</section> -->
			
			<>
			<div
			  className={cx(
				"group cursor-pointer",
				minimal && "grid gap-10 md:grid-cols-2"
			  )}>
			  <div
				className={cx(
				  " overflow-hidden rounded-md bg-gray-100 transition-all hover:scale-105   dark:bg-gray-800"
				)}>
				<Link
				  className={cx(
					"relative block",
					aspect === "landscape"
					  ? "aspect-video"
					  : aspect === "custom"
					  ? "aspect-[5/4]"
					  : "aspect-square"
				  )}
				  href={`/post/${pathPrefix ? `${pathPrefix}/` : ""}${
					post.slug.current
				  }`}>
				  {imageProps ? (
					<Image
					  src={imageProps.src}
					  {...(post.mainImage.blurDataURL && {
						placeholder: "blur",
						blurDataURL: post.mainImage.blurDataURL
					  })}
					  alt={post.mainImage.alt || "Thumbnail"}
					  priority={preloadImage ? true : false}
					  className="object-cover transition-all"
					  fill
					  sizes="(max-width: 768px) 30vw, 33vw"
					/>
				  ) : (
					<span className="absolute left-1/2 top-1/2 h-16 w-16 -translate-x-1/2 -translate-y-1/2 text-gray-200">
					  <PhotoIcon />
					</span>
				  )}
				</Link>
			  </div>
	  
			  <div className={cx(minimal && "flex items-center")}>
				<div>
				  <CategoryLabel
					categories={post.categories}
					nomargin={minimal}
				  />
				  <h2
					className={cx(
					  fontSize === "large"
						? "text-2xl"
						: minimal
						? "text-3xl"
						: "text-lg",
					  fontWeight === "normal"
						? "line-clamp-2 font-medium  tracking-normal text-black"
						: "font-semibold leading-snug tracking-tight",
					  "mt-2    dark:text-white"
					)}>
					<Link
					  href={`/post/${pathPrefix ? `${pathPrefix}/` : ""}${
						post.slug.current
					  }`}>
					  <span
						className="bg-gradient-to-r from-green-200 to-green-100 bg-[length:0px_10px] bg-left-bottom
			bg-no-repeat
			transition-[background-size]
			duration-500
			hover:bg-[length:100%_3px]
			group-hover:bg-[length:100%_10px]
			dark:from-purple-800 dark:to-purple-900">
						{post.title}
					  </span>
					</Link>
				  </h2>
	  
				  <div className="hidden">
					{post.excerpt && (
					  <p className="mt-2 line-clamp-3 text-sm text-gray-500 dark:text-gray-400">
						<Link
						  href={`/post/${
							pathPrefix ? `${pathPrefix}/` : ""
						  }${post.slug.current}`}>
						  {post.excerpt}
						</Link>
					  </p>
					)}
				  </div>
	  
				  <div className="mt-3 flex items-center space-x-3 text-gray-500 dark:text-gray-400">
					<Link href={`/author/${post?.author?.slug?.current}`}>
					  <div className="flex items-center gap-3">
						<div className="relative h-5 w-5 flex-shrink-0">
						  {post?.author?.image && (
							<Image
							  src={AuthorimageProps.src}
							  alt={post?.author?.name}
							  className="rounded-full object-cover"
							  fill
							  sizes="20px"
							/>
						  )}
						</div>
						<span className="truncate text-sm">
						  {post?.author?.name}
						</span>
					  </div>
					</Link>
					<span className="text-xs text-gray-300 dark:text-gray-600">
					  &bull;
					</span>
					<time
					  className="truncate text-sm"
					  dateTime={post?.publishedAt || post._createdAt}>
					  {format(
						parseISO(post?.publishedAt || post._createdAt),
						"MMMM dd, yyyy"
					  )}
					</time>
				  </div>
				</div>
			  </div>
			</div>
		  </>
			
			<!-- ====== Blog Section End -->

		</main>
		<Footer />
	</body>
</html>
